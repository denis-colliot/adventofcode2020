/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package com.adventofcode.day2

import kotlin.test.Test
import kotlin.test.assertEquals
import kotlin.test.assertFalse
import kotlin.test.assertTrue

class ProgramTest {

    private val program by lazy { Program() }

    @Test
    fun `should parse input`() {
        assertEquals(Program.Input(1, 3, 'a', "abcde"), program.parseInput("1-3 a: abcde"))
        assertEquals(Program.Input(2, 9, 'c', "ccccccccc"), program.parseInput("2-9 c: ccccccccc"))
        assertEquals(Program.Input(23, 42, 'Z', "sfsdfssg"), program.parseInput("23-42 Z: sfsdfssg"))
    }

    @Test
    fun `should test password policy validator part1`() {
        assertTrue(program.policyValidatorPart1(Program.Input(1, 3, 'a', "abcde")))
        assertFalse(program.policyValidatorPart1(Program.Input(1, 3, 'b', "cdefg")))
        assertTrue(program.policyValidatorPart1(Program.Input(2, 9, 'c', "ccccccccc")))
    }

    @Test
    fun `should test password policy validator part2`() {
        assertTrue(program.policyValidatorPart2(Program.Input(1, 3, 'a', "abcde")))
        assertFalse(program.policyValidatorPart2(Program.Input(1, 3, 'b', "cdefg")))
        assertFalse(program.policyValidatorPart2(Program.Input(2, 9, 'c', "ccccccccc")))
    }

    @Test
    fun `should count valid password with policy validator part1`() {
        // Given
        val inputs = listOf("1-3 a: abcde", "1-3 b: cdefg", "2-9 c: ccccccccc")

        // When
        val result = program.countValidPasswords(inputs, program.policyValidatorPart1)

        // Then
        assertEquals(2, result)
    }

    @Test
    fun `should count valid password with policy validator part2`() {
        // Given
        val inputs = listOf("1-3 a: abcde", "1-3 b: cdefg", "2-9 c: ccccccccc")

        // When
        val result = program.countValidPasswords(inputs, program.policyValidatorPart2)

        // Then
        assertEquals(1, result)
    }
}
