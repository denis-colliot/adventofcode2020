/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package com.adventofcode.day2

import com.adventofcode.IsDayProgram
import java.io.File

typealias PolicyValidator = (Program.Input) -> Boolean

class Program : IsDayProgram<Pair<Int, Int>> {

    override fun run(dayNumber: Int): Pair<Int, Int> {
        val inputs = File(javaClass.getResource("/day2/inputs").toURI()).readLines()
        return countValidPasswords(inputs, policyValidatorPart1) to countValidPasswords(inputs, policyValidatorPart2)
    }

    data class Input(val min: Int, val max: Int, val character: Char, val password: String)

    fun countValidPasswords(inputs: List<String>, policyValidator: PolicyValidator): Int =
            inputs.mapNotNull(::parseInput).count(policyValidator)

    fun parseInput(input: String): Input? =
            "(\\d+)-(\\d+) (\\w): (\\w+)".toRegex().matchEntire(input)?.let {
                Input(it.groupValues[1].toInt(),
                        it.groupValues[2].toInt(),
                        it.groupValues[3].first(),
                        it.groupValues[4])
            }

    val policyValidatorPart1: PolicyValidator = { input ->
        input.password.count { it == input.character } in input.min..input.max
    }

    val policyValidatorPart2: PolicyValidator = { input ->
        val charAtMin = input.password.getOrNull(input.min - 1)
        val charAtMax = input.password.getOrNull(input.max - 1)
        (charAtMin == input.character).xor(charAtMax == input.character)
    }

}